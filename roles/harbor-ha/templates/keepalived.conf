! Configuration File for keepalived

global_defs {
   router_id LVS_{{ hostvars[inventory_hostname]['ip'].split(".")[0] }}_{{ hostvars[inventory_hostname]['ip'].split(".")[1] }}_{{ hostvars[inventory_hostname]['ip'].split(".")[2] }}_{{ hostvars[inventory_hostname]['ip'].split(".")[3] }}
}

vrrp_script checkhaproxy
{
    script "/opt/check.sh"
    interval 1
    weight -30
}

vrrp_instance VI_1 {
    state {{ harbor_ha_state }}
    interface {{ ifname.stdout }}
    virtual_router_id 94
    priority {{ harbor_ha_priority }}
    unicast_src_ip {{ hostvars[inventory_hostname]['ip'] }}
    unicast_peer {
{% for item in groups['harbor'] %}
{% if item != inventory_hostname %}
        {{ hostvars[item]['ip'] }}
{% endif %}
{% endfor %}
    }
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass "{{ harbor_vip[-8:] }}"
    }
    virtual_ipaddress {
        {{ harbor_vip }}/32
    }
    track_script
    {
        checkhaproxy
    }
}

{% if kube_network_dualstack_enabled | default(false) | bool %}
vrrp_instance VI_2 {
    state {{ harbor_ha_state }}
    interface {{ ifname.stdout }}
    virtual_router_id 96
    priority {{ harbor_ha_priority }}
    unicast_src_ip {{ hostvars[inventory_hostname]['ipv6'] }}
    unicast_peer {
{% for item in groups['harbor'] %}
{% if item != inventory_hostname %}
        {{ hostvars[item]['ipv6'] }}
{% endif %}
{% endfor %}
    }
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass "{{ harbor_vip_ipv6[-8:] }}"
    }
    virtual_ipaddress {
        {{ harbor_vip_ipv6 }}/128
    }
    address-family inet6
    track_script
    {
        checkhaproxy
    }
}
{% endif %}
